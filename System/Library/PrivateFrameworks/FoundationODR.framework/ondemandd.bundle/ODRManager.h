/*
* This header is generated by classdump-dyld 1.0
* on Saturday, July 30, 2016 at 2:12:23 AM Japan Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/PrivateFrameworks/FoundationODR.framework/ondemandd.bundle/ondemandd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol ODRStoreIntegrationProtocol, OS_dispatch_source;
@class NSRecursiveLock, NSObject, BKSApplicationStateMonitor;

@interface ODRManager : NSObject {

	id<ODRStoreIntegrationProtocol> _store;
	NSRecursiveLock* _resourcesLock;
	NSObject*<OS_dispatch_source> _lowDisk;
	BKSApplicationStateMonitor* _appStateMonitor;

}

@property (nonatomic,retain) BKSApplicationStateMonitor * appStateMonitor;              //@synthesize appStateMonitor=_appStateMonitor - In the implementation block
+(long long)_availableSpaceOnDeviceRootVolume;
+(long long)_availableSpaceCushion;
+(BOOL)isAppRunning:(id)arg1 ;
+(id)defaultManager;
+(void)initialize;
-(long long)addRequest:(id)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
-(void)resumeRequest:(id)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
-(void)removeRequest:(id)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
-(void)updatePriorityOfRequest:(id)arg1 ;
-(void)_setupPurgingSupport;
-(long long)purgeBytes:(long long)arg1 odrOnly:(BOOL)arg2 urgency:(int)arg3 ;
-(id)currentDownloadRequestsForApplicationBundleID:(id)arg1 ;
-(void)pauseRequest:(id)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
-(void)addIntegrityHashingFromAssetPack:(id)arg1 toRequest:(id)arg2 ;
-(void)reportOnTopic:(id)arg1 withData:(id)arg2 ;
-(long long)_calculatePurgeableSpaceForUrgency:(int)arg1 ;
-(long long)_purgeBytes:(long long)arg1 forUrgency:(int)arg2 ;
-(void)_purgeCancelled;
-(id)purgeableAssetsForUrgency:(int)arg1 withMinimumTotalSize:(long long)arg2 sizeReturned:(long long*)arg3 ;
-(id)_allNonRunningAppAssetsLastUsedLaterThan:(unsigned long long)arg1 ;
-(void)scanAndCleanQueue;
-(void)cancelRequestsForApplicationWithBundleID:(id)arg1 ;
-(void)fetchManifestForAdamID:(id)arg1 withExternalVersionID:(id)arg2 variant:(id)arg3 appBundleIdentifier:(id)arg4 isMachineVPP:(BOOL)arg5 withCompletionBlock:(/*^block*/id)arg6 ;
-(void)fetchManifestForBetaApplicationWithAdamID:(id)arg1 withExternalVersionID:(id)arg2 bundleShortVersion:(id)arg3 bundleVersion:(id)arg4 variant:(id)arg5 appBundleIdentifier:(id)arg6 isMachineVPP:(BOOL)arg7 withCompletionBlock:(/*^block*/id)arg8 ;
-(BOOL)checkAndRequestRequiredSpaceForRequest:(long long)arg1 ;
-(void)performResourceAccessBlock:(/*^block*/id)arg1 forApplicationBundleID:(id)arg2 ;
-(void)performResourceAccessBlock:(/*^block*/id)arg1 ;
-(void)purgeAllAssetsForApplication:(id)arg1 forReason:(unsigned long long)arg2 ;
-(void)purgeAssetWithIdentifier:(id)arg1 forReason:(unsigned long long)arg2 ;
-(void)startMonitoringApplicationWithBundleIdentifier:(id)arg1 ;
-(void)stopMonitoringApplicationWithBundleIdentifier:(id)arg1 ;
-(id)init;
-(id)status;
-(BKSApplicationStateMonitor *)appStateMonitor;
-(void)setAppStateMonitor:(BKSApplicationStateMonitor *)arg1 ;
@end

